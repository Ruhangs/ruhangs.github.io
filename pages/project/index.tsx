/* eslint-disable @next/next/no-img-element */
import Head from 'next/head'
import Image from 'next/image'
import Link from 'next/link'
import { useRouter } from 'next/router'
import styles from './Project.module.css'


export default function Skill() {
  const router = useRouter()
  if (router.isFallback) {
    <h1>Data is loading</h1>;
  }
  return (
    <>
      <Head>
        <title>项目经历</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <Link href={"skill"}>
          <div className={styles.header}>
            <div className={styles.back}>
              <Image src="/up.svg" alt='向上继续' width={40} height={40} priority/>
              <h3 >
              专业技能
              </h3>
            </div>
          </div> 
        </Link>

        <div className={styles.center}>
          <div className={ styles.content }>
            <Image className={styles.pic} src="/music.svg" alt='音乐项目' width={150} height={150} priority/>
            {/* <img className={styles.pic} src='/music.svg' alt="项目封面" /> */}
            <div className={styles.text}>
              <span>仿网易云音乐Webapp <i>2022.12 - 2023.01</i> </span>
              <h5>react | readux | axios | styled-components</h5>
              <ul>
                <li>采用了ES6的语法，采用axios统一处理请求接口</li>
                <li>基于localStorage的缓存组件开发，可以设置有效时长，适用于Webapp</li>
                <li>开发Loading，Scroll，Confirm等组件</li>
                <li>实现了图像的懒加载</li>
              </ul>
            </div>
          </div>
          {/* {
            education.length ? 
            education.map((item: any,index: any) => {
              return (
                <div key={index} className={ styles.content }>
                  <img className={styles.image} src={item.imgUrl} alt="" />
                  <div className={styles.text}>
                    <span>{item.name} <i>{item.start}-{item.end}</i> </span>
                    <h5>{item.major} | {item.degree}</h5>
                    <ul>
                      {
                        item.glory.map((item: any, index: any) => {
                          return <li key={index}>{item}</li>
                        })
                      }
                    </ul>
                  </div>
                </div>
                )
            }) : null
          }   */}
        </div>

        <div className={styles.footer}>
          <h1>
            感谢观看
          </h1>
        </div> 
      </main>
    </>
  )
}
